namespace Shipwreck.ValueFormatters;

public class ChineseNumeralFormatterTest
{
    [Theory]
    [InlineData("cj", 0, "〇")]
    [InlineData("cj", 1, "一")]
    [InlineData("cj", 2, "二")]
    [InlineData("cj", 3, "三")]
    [InlineData("cj", 4, "四")]
    [InlineData("cj", 5, "五")]
    [InlineData("cj", 6, "六")]
    [InlineData("cj", 7, "七")]
    [InlineData("cj", 8, "八")]
    [InlineData("cj", 9, "九")]
    [InlineData("cj", 10, "十")]
    [InlineData("cj", 11, "十一")]
    [InlineData("cj", 21, "二十一")]
    [InlineData("cj", 100, "百")]
    [InlineData("cj", 101, "百一")]
    [InlineData("cj", 321, "三百二十一")]
    [InlineData("cj", 4321, "四千三百二十一")]
    [InlineData("cj", 10000, "一万")]
    [InlineData("cj", 43210000, "四千三百二十一万")]
    [InlineData("cj", 10000_0000, "一億")]
    [InlineData("cj", 21_0000_0000, "二十一億")]
    [InlineData("cj", 8765_4321, "八千七百六十五万四千三百二十一")]
    [InlineData("cjd", 0, "〇")]
    [InlineData("cjd", 10, "一〇")]
    [InlineData("cjd", 8765_4321, "八七六五四三二一")]
    [InlineData("cjd", 10_0000_0000, "一〇〇〇〇〇〇〇〇〇")]
    [InlineData("jp", 0, "零")]
    [InlineData("jp", 1, "壱")]
    [InlineData("jp", 2, "弐")]
    [InlineData("jp", 3, "参")]
    [InlineData("jp", 4, "肆")]
    [InlineData("jp", 5, "伍")]
    [InlineData("jp", 6, "陸")]
    [InlineData("jp", 7, "漆")]
    [InlineData("jp", 8, "捌")]
    [InlineData("jp", 9, "玖")]
    [InlineData("jp", 10, "拾")]
    [InlineData("jp", 11, "拾壱")]
    [InlineData("jp", 21, "弐拾壱")]
    [InlineData("jp", 100, "陌")]
    [InlineData("jp", 101, "陌壱")]
    [InlineData("jp", 321, "参陌弐拾壱")]
    [InlineData("jp", 4321, "肆阡参陌弐拾壱")]
    [InlineData("jp", 10000, "壱萬")]
    [InlineData("jp", 43210000, "肆阡参陌弐拾壱萬")]
    [InlineData("jp", 10000_0000, "壱億")]
    [InlineData("jp", 21_0000_0000, "弐拾壱億")]
    [InlineData("jp", 8765_4321, "捌阡漆陌陸拾伍萬肆阡参陌弐拾壱")]
    [InlineData("jp>3-0", 0, "〇")]
    [InlineData("jp>3-0", 1, "壱")]
    [InlineData("jp>3-0", 2, "弐")]
    [InlineData("jp>3-0", 3, "参")]
    [InlineData("jp>3-0", 4, "四")]
    [InlineData("jp>3-0", 5, "五")]
    [InlineData("jp>3-0", 6, "六")]
    [InlineData("jp>3-0", 7, "七")]
    [InlineData("jp>3-0", 8, "八")]
    [InlineData("jp>3-0", 9, "九")]
    [InlineData("jp>3-0", 10, "十")]
    public void Test(string format, int value, string expected)
        => Assert.Equal(expected, new ChineseNumeralFormatter().ToString(value, format));
}
